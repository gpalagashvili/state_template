# Page object
page = PAGE
page {
  typeNum = 0

  # Fluidtemplate   
  10 = FLUIDTEMPLATE
  10 {
    # Template name based on backend layout   
    templateName = TEXT
    templateName {
      cObject = TEXT
      cObject {
        data = pagelayout
        required = 1
        case = uppercamelcase
        split {
          token = pagets__
          cObjNum = 1
          1.current = 1
        }
      }
      ifEmpty = Default
    }

    templateRootPaths {
      0 = EXT:state_template/Resources/Private/Templates/Page/
      1 = {$page.fluidtemplate.templateRootPath}
    }
    partialRootPaths {
      0 = EXT:state_template/Resources/Private/Partials/Page/
      1 = {$page.fluidtemplate.partialRootPath}
    }
    layoutRootPaths {
      0 = EXT:state_template/Resources/Private/Layouts/Page/
      1 = {$page.fluidtemplate.layoutRootPath}
    }
  }

  meta {
    viewport = {$page.meta.viewport}     
    author = {$page.meta.author}
  }

  # Include stylesheets
  includeCSS {
    # Bootstrap 5.3.2
    bootstrap = EXT:state_template/Resources/Public/Css/Bootstrap/bootstrap.min.css
    starter = EXT:state_template/Resources/Public/Css/Bootstrap/starter-template.css
  }  

  # Include js footer libraries
  includeJSFooterlibs {
    # Bootstrap 5.3.2
    bootstrap = EXT:state_template/Resources/Public/JavaScript/Bootstrap/bootstrap.min.js
    bundle = EXT:state_template/Resources/Public/JavaScript/Bootstrap/bootstrap.bundle.min.js
    jquery = EXT:state_template/Resources/Public/JavaScript/JQuery/jquery-3.6.1.min.js
  } 
}

# Config
config {
  metaCharset = {$config.metaCharset}
  htmlTag.attributes.class = {$config.htmlTag.attributes.class}
  debug = 1
}

# Dynamic content
lib.dynamicContent = COA
lib.dynamicContent {
  5 = LOAD_REGISTER
  5 {
    colPos.cObject = TEXT
    colPos.cObject {
        field = colPos
        ifEmpty.cObject = TEXT
        ifEmpty.cObject {
            value.current = 1
            ifEmpty = 0
        }
    }
      
    slide.cObject = TEXT
    slide.cObject {
        override {
            field = slide
            if {
                isInList.field = slide
                value = -1, 0, 1, 2
            }
        }
        ifEmpty = 0
    }

    pageUid.cObject = TEXT
    pageUid.cObject {
        field = pageUid
        ifEmpty.data = TSFE:id
    }

    contentFromPid.cObject = TEXT
    contentFromPid.cObject {
        data = DB:pages:{register:pageUid}:content_from_pid
        data.insertData = 1
    }
     
    wrap.cObject = TEXT
    wrap.cObject {
        field = wrap
    }
    elementWrap.cObject = TEXT
    elementWrap.cObject{
        field = elementWrap
    }
  }
    
  20 = CONTENT
  20 {
    table = tt_content
    select {
      includeRecordsWithoutDefaultTranslation = 1
      orderBy = sorting
      where = {#colPos}={register:colPos}
      where.insertData = 1
      pidInList.data = register:pageUid
      pidInList.override.data = register:contentFromPid
    }
        
    slide = {register:slide}
    slide.insertData = 1
    renderObj {
      stdWrap{
        dataWrap = {register:elementWrap}
        required = 1
      }
    }
        
    stdWrap {
      dataWrap = {register:wrap}
      required = 1
    }
  }

  90 = RESTORE_REGISTER
}
lib.dynamicContentSlide =< lib.dynamicContent
lib.dynamicContentSlide.20.slide = -1
